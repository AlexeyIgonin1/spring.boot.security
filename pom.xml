<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.spring.security</groupId>
	<artifactId>spring.boot.security</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring.boot.security</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<exec.mainClass>fully-qualified-class-name</exec.mainClass>
		<jooq.version>3.18.6</jooq.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!--LIQUIBASE-->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.1.0</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JOOQ Generator -->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-jooq</artifactId>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.jooq</groupId>-->
<!--			<artifactId>jooq</artifactId>-->
<!--			<version>${jooq.version}</version>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.jooq</groupId>-->
<!--			<artifactId>jooq-codegen-maven</artifactId>-->
<!--			<version>${jooq.version}</version>-->
<!--		</dependency>-->


<!--		<dependency>-->
<!--			<groupId>org.jooq</groupId>-->
<!--			<artifactId>jooq</artifactId>-->
<!--			<version>${jooq.version}</version>-->
<!--		</dependency>-->

<!--		&lt;!&ndash; These may not be required, unless you use the GenerationTool manually for code generation &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>org.jooq</groupId>-->
<!--			<artifactId>jooq-meta</artifactId>-->
<!--			<version>${jooq.version}</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.jooq</groupId>-->
<!--			<artifactId>jooq-codegen</artifactId>-->
<!--			<version>${jooq.version}</version>-->
<!--		</dependency>-->



		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
			<version>${jooq.version}</version>
		</dependency>

		<!-- стартер для создания бинов jooq -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.jooq</groupId>
					<artifactId>jooq</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- The jOOQ code generator plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>

			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.jooq</groupId>-->
<!--				<artifactId>jooq-codegen-maven</artifactId>-->
<!--			    <version>${jooq.version}</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>generate-sources</phase>-->
<!--						<goals>-->
<!--							<goal>generate</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<configurationFile>src/main/resources/jooqconf.xml</configurationFile>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->


			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>

				<executions>
					<!-- Generate the required class from the database -->
					<execution>
						<id>generate-jooq</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- сюда подставляются настройки соединения с бд -->
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>jdbc:postgresql://localhost:5432/springboot</url>
						<user>postgres</user>
						<password>admin</password>
					</jdbc>
					<!-- Generator parameters -->
					<generator>
						<name>org.jooq.codegen.DefaultGenerator</name>
						<database>
							<name>org.jooq.meta.postgres.PostgresDatabase</name>
							<includes>.*</includes>
<!--							<excludes />-->
							<excludes></excludes>
							<inputSchema>public</inputSchema>
						</database>

						<!-- Generate classes for tables and records -->
						<generate>
							<globalTableReferences>true</globalTableReferences>
							<globalUDTReferences>false</globalUDTReferences>
							<fluentSetters>true</fluentSetters>
							<javaTimeTypes>true</javaTimeTypes>
							<pojos>true</pojos>
<!--							<deprecated>false</deprecated>-->
<!--							<jpaAnnotations>false</jpaAnnotations>-->
<!--							<validationAnnotations>true</validationAnnotations>-->
<!--							<instanceFields>false</instanceFields>-->
<!--							<records>false</records>-->
<!--							<immutablePojos>false</immutablePojos>-->
<!--							<relations>true</relations>-->
<!--							<globalObjectReferences>false</globalObjectReferences>-->

						</generate>
						<!-- Configure the target package and directory -->
						<target>
							<packageName>com.example.db</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>

					</generator>
				</configuration>
			</plugin>
		</plugins>

	</build>
</project>
